buildscript {
    rootProject.buildscript
}

bootJar {
    baseName = project.name
    version =  '0.1.0'
    into('META-INF/resources') {
        from "./META-INF/resources"
    }
}

springBoot {
//    mainClassName = 'com.category.fans.App'
}
dependencies {
    compile group: 'org.webjars', name: 'webjars-locator', version: '0.34'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.17.0'
}

class GreetingPluginExtension {
    String message = 'Hello from GreetingPlugin'
}

class GreetingPlugin implements Plugin<Project> {
    void apply(Project project) {
        // Add the 'greeting' extension object
        def extension = project.extensions.create('greeting', GreetingPluginExtension)
        // Add a task that uses configuration from the extension object
        project.task('hello') {
            doLast {
                println extension.message
            }
        }
    }
}

apply plugin: GreetingPlugin

// Configure the extension
greeting.message = "Hi from Gradle ${groovyVersion}"

task runAngularCliTest(type:Exec) {
//    workingDir '../tomcat/bin'
    workingDir '.'

    //on windows:
//    commandLine 'cmd', '/c', 'stop.bat'

//    //on linux
//    commandLine '/home/mak/ln/ng' , 'config' , '--help'
    commandLine 'ng' , 'config' , '--help'
//    args 'help'

//    commandLine 'ls' , '-t' , '-l'


    //store the output instead of printing to the console:
//    standardOutput = new ByteArrayOutputStream()
//
//    //extension method stopTomcat.output() can be used to obtain the output:
//    ext.output = {
//        return standardOutput.toString()
//    }
}